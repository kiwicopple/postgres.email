/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/mailboxes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.mailboxes.id"];
          message_count?: parameters["rowFilter.mailboxes.message_count"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["mailboxes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** mailboxes */
          mailboxes?: definitions["mailboxes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.mailboxes.id"];
          message_count?: parameters["rowFilter.mailboxes.message_count"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.mailboxes.id"];
          message_count?: parameters["rowFilter.mailboxes.message_count"];
        };
        body: {
          /** mailboxes */
          mailboxes?: definitions["mailboxes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/messages": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.messages.id"];
          external_id?: parameters["rowFilter.messages.external_id"];
          mailbox_id?: parameters["rowFilter.messages.mailbox_id"];
          in_reply_to?: parameters["rowFilter.messages.in_reply_to"];
          ts?: parameters["rowFilter.messages.ts"];
          subject?: parameters["rowFilter.messages.subject"];
          to_addresses?: parameters["rowFilter.messages.to_addresses"];
          cc_addresses?: parameters["rowFilter.messages.cc_addresses"];
          bcc_addresses?: parameters["rowFilter.messages.bcc_addresses"];
          from_addresses?: parameters["rowFilter.messages.from_addresses"];
          imap_seq_num?: parameters["rowFilter.messages.imap_seq_num"];
          size?: parameters["rowFilter.messages.size"];
          attachments?: parameters["rowFilter.messages.attachments"];
          body_text?: parameters["rowFilter.messages.body_text"];
          embedded_files?: parameters["rowFilter.messages.embedded_files"];
          headers?: parameters["rowFilter.messages.headers"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["messages"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** messages */
          messages?: definitions["messages"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.messages.id"];
          external_id?: parameters["rowFilter.messages.external_id"];
          mailbox_id?: parameters["rowFilter.messages.mailbox_id"];
          in_reply_to?: parameters["rowFilter.messages.in_reply_to"];
          ts?: parameters["rowFilter.messages.ts"];
          subject?: parameters["rowFilter.messages.subject"];
          to_addresses?: parameters["rowFilter.messages.to_addresses"];
          cc_addresses?: parameters["rowFilter.messages.cc_addresses"];
          bcc_addresses?: parameters["rowFilter.messages.bcc_addresses"];
          from_addresses?: parameters["rowFilter.messages.from_addresses"];
          imap_seq_num?: parameters["rowFilter.messages.imap_seq_num"];
          size?: parameters["rowFilter.messages.size"];
          attachments?: parameters["rowFilter.messages.attachments"];
          body_text?: parameters["rowFilter.messages.body_text"];
          embedded_files?: parameters["rowFilter.messages.embedded_files"];
          headers?: parameters["rowFilter.messages.headers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.messages.id"];
          external_id?: parameters["rowFilter.messages.external_id"];
          mailbox_id?: parameters["rowFilter.messages.mailbox_id"];
          in_reply_to?: parameters["rowFilter.messages.in_reply_to"];
          ts?: parameters["rowFilter.messages.ts"];
          subject?: parameters["rowFilter.messages.subject"];
          to_addresses?: parameters["rowFilter.messages.to_addresses"];
          cc_addresses?: parameters["rowFilter.messages.cc_addresses"];
          bcc_addresses?: parameters["rowFilter.messages.bcc_addresses"];
          from_addresses?: parameters["rowFilter.messages.from_addresses"];
          imap_seq_num?: parameters["rowFilter.messages.imap_seq_num"];
          size?: parameters["rowFilter.messages.size"];
          attachments?: parameters["rowFilter.messages.attachments"];
          body_text?: parameters["rowFilter.messages.body_text"];
          embedded_files?: parameters["rowFilter.messages.embedded_files"];
          headers?: parameters["rowFilter.messages.headers"];
        };
        body: {
          /** messages */
          messages?: definitions["messages"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/postgres_fdw_get_connections": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/postgres_fdw_disconnect_all": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/postgres_fdw_disconnect": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            "": string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/postgres_fdw_handler": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  mailboxes: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: integer */
    message_count?: number;
  };
  messages: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: uuid
     * @default gen_random_uuid()
     */
    external_id?: string;
    /**
     * Format: text
     * @description Note:
     * This is a Foreign Key to `mailboxes.id`.<fk table='mailboxes' column='id'/>
     */
    mailbox_id?: string;
    /** Format: jsonb */
    in_reply_to?: string;
    /** Format: timestamp with time zone */
    ts?: string;
    /** Format: text */
    subject?: string;
    /** Format: jsonb */
    to_addresses?: string;
    /** Format: jsonb */
    cc_addresses?: string;
    /** Format: jsonb */
    bcc_addresses?: string;
    /** Format: jsonb */
    from_addresses?: string;
    /** Format: integer */
    imap_seq_num?: number;
    /** Format: bigint */
    size?: number;
    /** Format: jsonb */
    attachments?: string;
    /** Format: text */
    body_text?: string;
    /** Format: jsonb */
    embedded_files?: string;
    /** Format: jsonb */
    headers?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description mailboxes */
  "body.mailboxes": definitions["mailboxes"];
  /** Format: text */
  "rowFilter.mailboxes.id": string;
  /** Format: integer */
  "rowFilter.mailboxes.message_count": string;
  /** @description messages */
  "body.messages": definitions["messages"];
  /** Format: text */
  "rowFilter.messages.id": string;
  /** Format: uuid */
  "rowFilter.messages.external_id": string;
  /** Format: text */
  "rowFilter.messages.mailbox_id": string;
  /** Format: jsonb */
  "rowFilter.messages.in_reply_to": string;
  /** Format: timestamp with time zone */
  "rowFilter.messages.ts": string;
  /** Format: text */
  "rowFilter.messages.subject": string;
  /** Format: jsonb */
  "rowFilter.messages.to_addresses": string;
  /** Format: jsonb */
  "rowFilter.messages.cc_addresses": string;
  /** Format: jsonb */
  "rowFilter.messages.bcc_addresses": string;
  /** Format: jsonb */
  "rowFilter.messages.from_addresses": string;
  /** Format: integer */
  "rowFilter.messages.imap_seq_num": string;
  /** Format: bigint */
  "rowFilter.messages.size": string;
  /** Format: jsonb */
  "rowFilter.messages.attachments": string;
  /** Format: text */
  "rowFilter.messages.body_text": string;
  /** Format: jsonb */
  "rowFilter.messages.embedded_files": string;
  /** Format: jsonb */
  "rowFilter.messages.headers": string;
}

export interface operations {}

export interface external {}
